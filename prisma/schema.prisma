// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserType {
  FACULTY
  STUDENT
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  name          String
  institution   String
  title         String
  phoneNumber   String
  collaborators Collaborator[]
  projects      Project[]
  travel        Travel?
  hotelBooking  HotelBooking?
  userType      UserType
}

model Collaborator {
  id       Int       @id @default(autoincrement())
  email    String
  name     String
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   Int
  projects Project[] @relation("ProjectCollaborators")
  attend   Boolean

  @@unique([userId, email])
}

model Project {
  id            Int            @id @default(autoincrement())
  name          String
  type          ProjectType
  status        ProjectStatus
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int
  filename      String
  storagePath   String
  collaborators Collaborator[] @relation("ProjectCollaborators")
  presontor     Int?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now())
  rejectedWith  String?
}

enum ProjectType {
  TALK
  POSTER
}

enum ProjectStatus {
  SAVED
  SUBMITTED
  ACCEPTED
  REJECTED
}

model Travel {
  id            Int      @id @default(autoincrement())
  arrivalDate   DateTime
  arrivalNo     String
  departureDate DateTime
  departureNo   String
  attendVisit   Boolean  @default(false)
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int      @unique
}

model HotelBooking {
  id            Int      @id @default(autoincrement())
  checkinDate   DateTime
  checkoutDate  DateTime
  standardRooms Int
  kingRooms     Int
  location      String
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int      @unique
}

model Admin {
  id       Int    @id @default(autoincrement())
  username String @unique
  secret   String
}
